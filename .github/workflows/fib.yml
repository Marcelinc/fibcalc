name: Zadanie
on:
  push:
    branches: [ main ]

jobs:
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-20.04
    
    steps:
      - uses: actions/checkout@v3

      #Skonfigurowanie dockera + buildx
      - name: Buildx set-up
        id: buildx
        uses: docker/setup-buildx-action@v2
        
      #Instalacja QEMU
      - name: Docker Setup QEMU
        uses: docker/setup-qemu-action@v2

      #Konfiguracja cachowania
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-

      #Metadane
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: name/app
          tags: |
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      #Logowanie do Dockerhuba
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{secrets.DOCKER_HUB_USERNAME}}
          password: ${{secrets.DOCKER_HUB_ACCESS_TOKEN}}

      #Zbudowanie i wypchniecie obrazu na Dockerhuba
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v3
        with:
          cache-from: type=registry,ref=docker.io/marcelinc/zad1cache
          cache-to: type=registry,ref=docker.io/marcelinc/zad1cache,mode=max
          platforms: linux/arm/v7,linux/arm64/v8,linux/amd64, 
          context: ./
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
      
      #Przeslij do ghcr.io
      - name: Login to ghcr registry and push image
        run: |
          echo '${{ secrets.GIT_HUB_TOKEN }}' | docker login ghcr,io -u marcelinc --password-stdin
          docker tag marcelinc/zadanie1 ghcr.io/marcelinc/zadanie1
          docker push ghcr.io/marcelinc/zadanie1
